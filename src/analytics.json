{
  "openapi": "3.0.1",
  "info": {
    "title": "RLAX - Analytics API",
    "version": "1.0",
    "x-logo": {
      "url": "https://www.rms.com/themes/rms/templates/dist/images/rms-head-logo.svg"
    }
  },
  "servers": [
    {
      "url": "/v1",
      "description": "Local"
    }
  ],
  "security": [
    {
      "RMS Bearer Authentication": []
    }
  ],
  "paths": {
    "/analysis-groups": {
      "get": {
        "tags": ["Analysis Groups"],
        "summary": "Get a list of Analysis Groups",
        "description": "Retrieves list of Analysis Groups.",
        "operationId": "getAnalysisGroups",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Filters applied to the query results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify 'ASC' to display the results in alphabetical or numerical ascending order or 'DESC' to display the results in descending order.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at '0'.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of all Analysis Groups have been successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysisGroup"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Analysis Groups"],
        "summary": "Create an Analysis Group",
        "description": "Triggers a job to create an Analysis Group, then returns job ID",
        "operationId": "createAnalysisGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalysisGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The Analysis Group resource was successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analysis-groups/{id}": {
      "get": {
        "tags": ["Analysis Groups"],
        "summary": "Get Analysis Group by ID",
        "description": "Retrieves Analysis Group information based on ID",
        "operationId": "getAnalysisGroupById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Analysis Group ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis Group has been successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysisGroup"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Analysis Groups"],
        "summary": "Update a specific Analysis Group",
        "description": "Triggers a job to update specified Analysis Group, then returns job ID",
        "operationId": "updateAnalysisGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the Analysis Group.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalysisGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Analysis Group successfully updated"
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Analysis Groups"],
        "summary": "Delete a specific Analysis Group",
        "description": "Triggers a job to delete specified analysis group, then returns job ID",
        "operationId": "deleteAnalysisGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the Analysis Group.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Analysis Group successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lastModified": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object",
                      "properties": {
                        "empty": {
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "entity": {
                      "type": "object"
                    },
                    "statusInfo": {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "reasonPhrase": {
                          "type": "string"
                        },
                        "family": {
                          "type": "string",
                          "enum": [
                            "INFORMATIONAL",
                            "SUCCESSFUL",
                            "REDIRECTION",
                            "CLIENT_ERROR",
                            "SERVER_ERROR",
                            "OTHER"
                          ]
                        }
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "empty": {
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "allowedMethods": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "entityTag": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "weak": {
                          "type": "boolean"
                        }
                      }
                    },
                    "cookies": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "version": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "path": {
                            "type": "string"
                          },
                          "domain": {
                            "type": "string"
                          },
                          "comment": {
                            "type": "string"
                          },
                          "maxAge": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "expiry": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "secure": {
                            "type": "boolean"
                          },
                          "httpOnly": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "links": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "params": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "uri": {
                            "type": "string",
                            "format": "uri"
                          },
                          "uriBuilder": {
                            "type": "object"
                          },
                          "rel": {
                            "type": "string"
                          },
                          "rels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "mediaType": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "subtype": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "wildcardType": {
                          "type": "boolean"
                        },
                        "wildcardSubtype": {
                          "type": "boolean"
                        }
                      }
                    },
                    "stringHeaders": {
                      "type": "object",
                      "properties": {
                        "empty": {
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "length": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "language": {
                      "type": "object",
                      "properties": {
                        "language": {
                          "type": "string"
                        },
                        "script": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "string"
                        },
                        "extensionKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleAttributes": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "iso3Language": {
                          "type": "string"
                        },
                        "iso3Country": {
                          "type": "string"
                        },
                        "displayLanguage": {
                          "type": "string"
                        },
                        "displayScript": {
                          "type": "string"
                        },
                        "displayCountry": {
                          "type": "string"
                        },
                        "displayVariant": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        }
                      }
                    },
                    "location": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/accounts/{id}/metrics": {
      "get": {
        "tags": ["Metrics"],
        "summary": "Get metrics for a specified account",
        "description": "Retrieves metrics for an account specified by its ID.",
        "operationId": "getAccountMetrics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the account.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Metrics for a specified account are successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMetrics"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{id}/pate": {
      "post": {
        "tags": ["Metrics"],
        "summary": "Processes an existing analysis for running a pate engine",
        "description": "Places an analysis into a queue, Processes an existing analysis for running a pate engine.",
        "operationId": "processPate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the analysis.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ACCEPTED. analysis is successfully submitted for pate job.",
            "headers": {
              "Location": {
                "description": "workflowId",
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{id}/analysis-region": {
      "get": {
        "tags": ["Metrics"],
        "summary": "Get region details for a specified analysis",
        "description": "Retrieves region details for specified analysis specified by its ID.",
        "operationId": "getAnalysisRegions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the analysis.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of region details for specified analysis successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses": {
      "get": {
        "tags": ["Metrics"],
        "summary": "Get all analyses",
        "description": "Retrieves all analyses",
        "operationId": "getAnalysesResults",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Filters applied to the query results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify 'ASC' to display the results in alphabetical or numerical ascending order or 'DESC' to display the results in descending order.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at '0'.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All Analyses successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnalysesItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisID}/pate-treaties": {
      "get": {
        "tags": ["Metrics"],
        "summary": "Get a list of PATE treaties",
        "description": "Retrieves a list of the pate treaties for a specified analysis",
        "operationId": "getPateList",
        "parameters": [
          {
            "name": "analysisID",
            "in": "path",
            "description": "Analysis ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at '0'.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of treaties in the data source is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PateSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Metrics"],
        "summary": "Deletes a list of PATE treaties",
        "description": "Deletes a list of the PATE treaties in a specified analysis",
        "operationId": "deletePateList",
        "parameters": [
          {
            "name": "analysisID",
            "in": "path",
            "description": "Analysis ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted. PATE treaties for analysis deleted."
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisID}/treaty/{treatyID}": {
      "get": {
        "tags": ["Metrics"],
        "summary": "Get treat by id",
        "description": "Retrieve treaty information based on given analysis and treaty.",
        "operationId": "getTreatyById",
        "parameters": [
          {
            "name": "analysisID",
            "in": "path",
            "description": "Analysis ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "treatyID",
            "in": "path",
            "description": "Treaty ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Treaty for a specified analysis is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Treaty"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{analysisID}/cedants": {
      "get": {
        "tags": ["Metrics"],
        "summary": "Get a list of Cedants",
        "description": "Retrieves a list of Cedants for a specified analysis",
        "operationId": "getCedants",
        "parameters": [
          {
            "name": "analysisID",
            "in": "path",
            "description": "Analysis ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "perspective",
            "in": "query",
            "description": "Financial perspective.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUUID",
            "in": "query",
            "description": "Job UUID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Cedants in the analysis is successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PateSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/portfolios/{id}/metrics": {
      "get": {
        "tags": ["Metrics"],
        "summary": "Get metrics for a specified portfolio",
        "description": "Retrieves metrics for a portfolio specified by its ID.",
        "operationId": "getPortfolioMetrics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the portfolio.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasource",
            "in": "query",
            "description": "Name of the data source.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Metrics for a specified portfolio are successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortfolioMetrics"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{id}/elt": {
      "get": {
        "tags": ["Metrics"],
        "summary": "Get report for a specified analysis",
        "description": "Retrieves report for specified analysis by its ID.",
        "operationId": "getEventLossTableResults",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the analysis.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "perspective",
            "in": "query",
            "description": "Financial perspective.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of retrieved records to display on the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of the page displaying the returned records, starting at '0'.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "treatyId",
            "in": "query",
            "description": "Treaty ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureId",
            "in": "query",
            "description": "Exposure ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureType",
            "in": "query",
            "description": "Exposure type",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "jobUUID",
            "in": "query",
            "description": "Job UUID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report for specified analysis successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventLossItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{id}/ep": {
      "get": {
        "tags": ["Metrics"],
        "summary": "Get EP Metrics for a specified analysis",
        "description": "Retrieves EP Metrics for a specified analysis, specified by its ID.",
        "operationId": "getEPMetricsByAnalysis",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the analysis.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "perspective",
            "in": "query",
            "description": "Financial perspective.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "treatyId",
            "in": "query",
            "description": "Treaty ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureId",
            "in": "query",
            "description": "Exposure ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureType",
            "in": "query",
            "description": "Exposure type",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "jobId",
            "in": "query",
            "description": "Job ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "jobUUID",
            "in": "query",
            "description": "Job UUID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of EP Metrics for a specified analysis successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EPMetrics"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/analyses/{id}/stats": {
      "get": {
        "tags": ["Metrics"],
        "summary": "Get statistics for a specified analysis",
        "description": "Retrieves statistics for specified analysis specified by its ID.",
        "operationId": "getStatisticsResults",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID number of the analysis.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "perspective",
            "in": "query",
            "description": "Financial perspective.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "treatyId",
            "in": "query",
            "description": "Treaty ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureId",
            "in": "query",
            "description": "Exposure ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exposureType",
            "in": "query",
            "description": "Exposure type",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "jobUUID",
            "in": "query",
            "description": "Job UUID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Statistics for specified analysis successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticsItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/pate-treaties": {
      "post": {
        "tags": ["Pate"],
        "summary": "Create a PATE treaty",
        "description": "Creates a PATE treaty, then returns the URL location of the new created PATE Treaty.",
        "operationId": "createPateTreaty",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The PATE Treaty resource was successfully created.",
            "headers": {
              "Location": {
                "description": "Location of the PATE Treaty resource.",
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/pate-treaties/{pateId}": {
      "get": {
        "tags": ["Pate"],
        "summary": "Get a PATE treaty by id",
        "description": "Retrieve Treaty information based on given pateId",
        "operationId": "getPateById",
        "parameters": [
          {
            "name": "pateId",
            "in": "path",
            "description": "Pate ID of pate.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Treaty for a specified account are successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pate"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Pate"],
        "summary": "Update a PATE treaty by id",
        "description": "Updates a record of a PATE treaty for given pateId",
        "operationId": "updatePateTreaty",
        "parameters": [
          {
            "name": "pateId",
            "in": "path",
            "description": "ID of the PATE treaty to be updated.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The PATE Treaty resource was successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lastModified": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object",
                      "properties": {
                        "empty": {
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "entity": {
                      "type": "object"
                    },
                    "statusInfo": {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "reasonPhrase": {
                          "type": "string"
                        },
                        "family": {
                          "type": "string",
                          "enum": [
                            "INFORMATIONAL",
                            "SUCCESSFUL",
                            "REDIRECTION",
                            "CLIENT_ERROR",
                            "SERVER_ERROR",
                            "OTHER"
                          ]
                        }
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "empty": {
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "allowedMethods": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "entityTag": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "weak": {
                          "type": "boolean"
                        }
                      }
                    },
                    "cookies": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "version": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "path": {
                            "type": "string"
                          },
                          "domain": {
                            "type": "string"
                          },
                          "comment": {
                            "type": "string"
                          },
                          "maxAge": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "expiry": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "secure": {
                            "type": "boolean"
                          },
                          "httpOnly": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "links": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "params": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "uri": {
                            "type": "string",
                            "format": "uri"
                          },
                          "uriBuilder": {
                            "type": "object"
                          },
                          "rel": {
                            "type": "string"
                          },
                          "rels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "mediaType": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "subtype": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "wildcardType": {
                          "type": "boolean"
                        },
                        "wildcardSubtype": {
                          "type": "boolean"
                        }
                      }
                    },
                    "stringHeaders": {
                      "type": "object",
                      "properties": {
                        "empty": {
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "length": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "language": {
                      "type": "object",
                      "properties": {
                        "language": {
                          "type": "string"
                        },
                        "script": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "string"
                        },
                        "extensionKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleAttributes": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "iso3Language": {
                          "type": "string"
                        },
                        "iso3Country": {
                          "type": "string"
                        },
                        "displayLanguage": {
                          "type": "string"
                        },
                        "displayScript": {
                          "type": "string"
                        },
                        "displayCountry": {
                          "type": "string"
                        },
                        "displayVariant": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        }
                      }
                    },
                    "location": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Pate"],
        "summary": "Delete a PATE treaty by id",
        "description": "Deletes a record of PATE Treaty for given pateId",
        "operationId": "deletePateTreaty",
        "parameters": [
          {
            "name": "pateId",
            "in": "path",
            "description": "ID number of the pate treaty.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The PATE Treaty resource is successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lastModified": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object",
                      "properties": {
                        "empty": {
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "entity": {
                      "type": "object"
                    },
                    "statusInfo": {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "reasonPhrase": {
                          "type": "string"
                        },
                        "family": {
                          "type": "string",
                          "enum": [
                            "INFORMATIONAL",
                            "SUCCESSFUL",
                            "REDIRECTION",
                            "CLIENT_ERROR",
                            "SERVER_ERROR",
                            "OTHER"
                          ]
                        }
                      }
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "empty": {
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "allowedMethods": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "entityTag": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "weak": {
                          "type": "boolean"
                        }
                      }
                    },
                    "cookies": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "version": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "path": {
                            "type": "string"
                          },
                          "domain": {
                            "type": "string"
                          },
                          "comment": {
                            "type": "string"
                          },
                          "maxAge": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "expiry": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "secure": {
                            "type": "boolean"
                          },
                          "httpOnly": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "links": {
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "params": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "uri": {
                            "type": "string",
                            "format": "uri"
                          },
                          "uriBuilder": {
                            "type": "object"
                          },
                          "rel": {
                            "type": "string"
                          },
                          "rels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "mediaType": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "subtype": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "wildcardType": {
                          "type": "boolean"
                        },
                        "wildcardSubtype": {
                          "type": "boolean"
                        }
                      }
                    },
                    "stringHeaders": {
                      "type": "object",
                      "properties": {
                        "empty": {
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "length": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "language": {
                      "type": "object",
                      "properties": {
                        "language": {
                          "type": "string"
                        },
                        "script": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "string"
                        },
                        "extensionKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleAttributes": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleKeys": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "iso3Language": {
                          "type": "string"
                        },
                        "iso3Country": {
                          "type": "string"
                        },
                        "displayLanguage": {
                          "type": "string"
                        },
                        "displayScript": {
                          "type": "string"
                        },
                        "displayCountry": {
                          "type": "string"
                        },
                        "displayVariant": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        }
                      }
                    },
                    "location": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please check that you are provided all required values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Access to this resource has been denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorMessage": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "logId": {
            "type": "string"
          }
        }
      },
      "AnalysisGroup": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "format": "int64"
          },
          "propagateDetailedLosses": {
            "type": "boolean"
          },
          "analysisIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "rateSchemes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventRateScheme"
            }
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          }
        }
      },
      "EventRateScheme": {
        "type": "object",
        "properties": {
          "modelRegionCode": {
            "maxLength": 4,
            "minLength": 4,
            "type": "string"
          },
          "perilCode": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "eventRateSchemeName": {
            "type": "string"
          },
          "eventRateSchemeId": {
            "type": "integer",
            "format": "int32"
          },
          "isDefault": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "AnalysisGroupSearchResult": {
        "type": "object",
        "properties": {
          "totalMatchCount": {
            "type": "integer",
            "format": "int64"
          },
          "searchMatchingAnalysisGroupList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalysisGroup"
            }
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "cedant": {
            "$ref": "#/components/schemas/Cedant"
          },
          "producer": {
            "$ref": "#/components/schemas/Producer"
          },
          "underwriter": {
            "$ref": "#/components/schemas/UnderWriter"
          },
          "branch": {
            "$ref": "#/components/schemas/Branch"
          },
          "userId1": {
            "type": "string"
          },
          "userId2": {
            "type": "string"
          },
          "userId3": {
            "type": "string"
          },
          "userId4": {
            "type": "string"
          },
          "userText1": {
            "type": "string"
          },
          "userText2": {
            "type": "string"
          },
          "createDate": {
            "type": "string"
          },
          "stampDate": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": ["InActive", "Active"]
          },
          "linkId": {
            "type": "string"
          },
          "guid": {
            "type": "string"
          },
          "isValid": {
            "type": "boolean"
          },
          "CustomData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "AccountMetrics": {
        "type": "object",
        "properties": {
          "totalLocations": {
            "type": "integer",
            "format": "int32"
          },
          "totalPolicies": {
            "type": "integer",
            "format": "int32"
          },
          "totalEmployees": {
            "type": "number",
            "format": "double"
          },
          "totalInsuredValue": {
            "$ref": "#/components/schemas/Amount"
          },
          "perilsExposed": {
            "type": "string"
          },
          "linkedAccount": {
            "$ref": "#/components/schemas/Account"
          },
          "linkedDatasource": {
            "type": "string"
          }
        }
      },
      "Amount": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "currencyCode": {
            "type": "string"
          }
        }
      },
      "Branch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Cedant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Producer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "UnderWriter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "AnalysisRegionSearchResult": {
        "type": "object",
        "properties": {
          "searchTotalMatch": {
            "type": "integer",
            "format": "int64"
          },
          "searchItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegionItem"
            }
          }
        }
      },
      "RegionItem": {
        "type": "object",
        "properties": {
          "region": {
            "type": "string"
          },
          "subRegion": {
            "type": "string"
          },
          "peril": {
            "type": "string"
          },
          "rateschemeid": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AnalysesItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "runDate": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "exposureType": {
            "type": "integer",
            "format": "int32"
          },
          "peril": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "region": {
            "type": "string"
          },
          "engineVersion": {
            "type": "string"
          },
          "groupType": {
            "type": "string"
          },
          "cedant": {
            "type": "string"
          },
          "lob": {
            "type": "string"
          },
          "engineType": {
            "type": "integer",
            "format": "int32"
          },
          "subperil": {
            "type": "integer",
            "format": "int32"
          },
          "exposureId": {
            "type": "integer",
            "format": "int32"
          },
          "dataSource": {
            "type": "string"
          },
          "jobId": {
            "type": "integer",
            "format": "int32"
          },
          "jobUUID": {
            "type": "string"
          },
          "isGroup": {
            "type": "boolean"
          },
          "engineName": {
            "type": "string"
          },
          "statusName": {
            "type": "string"
          },
          "typeName": {
            "type": "string"
          },
          "subperilName": {
            "type": "string"
          }
        }
      },
      "AnalyticsSearchResult": {
        "type": "object",
        "properties": {
          "searchTotalMatch": {
            "type": "integer",
            "format": "int64"
          },
          "searchItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalysesItem"
            }
          }
        }
      },
      "ExposureValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "LineOfBusiness": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Pate": {
        "required": ["cedant"],
        "type": "object",
        "properties": {
          "treatyId": {
            "type": "integer",
            "format": "int32"
          },
          "treatyNumber": {
            "type": "string"
          },
          "treatyName": {
            "type": "string"
          },
          "cedant": {
            "$ref": "#/components/schemas/Cedant"
          },
          "producer": {
            "$ref": "#/components/schemas/Producer"
          },
          "treatyType": {
            "$ref": "#/components/schemas/ExposureValue"
          },
          "currency": {
            "$ref": "#/components/schemas/ExposureValue"
          },
          "attachBasis": {
            "$ref": "#/components/schemas/ExposureValue"
          },
          "attachLevel": {
            "$ref": "#/components/schemas/ExposureValue"
          },
          "premium": {
            "type": "number",
            "format": "double"
          },
          "occurLimit": {
            "type": "number",
            "format": "double"
          },
          "attachPt": {
            "type": "number",
            "format": "double"
          },
          "riskLimit": {
            "type": "number",
            "format": "double"
          },
          "retentAmt": {
            "type": "number",
            "format": "double"
          },
          "pcntPlaced": {
            "type": "number",
            "format": "double"
          },
          "effectDate": {
            "type": "string"
          },
          "expireDate": {
            "type": "string"
          },
          "pcntRetent": {
            "type": "number",
            "format": "double"
          },
          "pcntRiShare": {
            "type": "number",
            "format": "double"
          },
          "pcntCovered": {
            "type": "number",
            "format": "double"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "numOfReinst": {
            "type": "integer",
            "format": "int32"
          },
          "reinstCharge": {
            "type": "number",
            "format": "double"
          },
          "maolAmount": {
            "type": "number",
            "format": "double"
          },
          "isValid": {
            "type": "boolean"
          },
          "userId1": {
            "type": "string"
          },
          "userId2": {
            "type": "string"
          },
          "lobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineOfBusiness"
            }
          },
          "analysisId": {
            "type": "integer",
            "format": "int32"
          },
          "pateId": {
            "type": "integer",
            "format": "int64"
          },
          "operationType": {
            "type": "string",
            "enum": ["INSERT", "DELETE", "UPDATE", "COPY", "IMPORT"]
          },
          "groupId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PateSearchResult": {
        "type": "object",
        "properties": {
          "totalMatchCount": {
            "type": "integer",
            "format": "int32"
          },
          "searchMatchingPateList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pate"
            }
          }
        }
      },
      "Treaty": {
        "required": ["cedant"],
        "type": "object",
        "properties": {
          "treatyId": {
            "type": "integer",
            "format": "int32"
          },
          "treatyNumber": {
            "type": "string"
          },
          "treatyName": {
            "type": "string"
          },
          "cedant": {
            "$ref": "#/components/schemas/Cedant"
          },
          "producer": {
            "$ref": "#/components/schemas/Producer"
          },
          "treatyType": {
            "$ref": "#/components/schemas/ExposureValue"
          },
          "currency": {
            "$ref": "#/components/schemas/ExposureValue"
          },
          "attachBasis": {
            "$ref": "#/components/schemas/ExposureValue"
          },
          "attachLevel": {
            "$ref": "#/components/schemas/ExposureValue"
          },
          "premium": {
            "type": "number",
            "format": "double"
          },
          "occurLimit": {
            "type": "number",
            "format": "double"
          },
          "attachPt": {
            "type": "number",
            "format": "double"
          },
          "riskLimit": {
            "type": "number",
            "format": "double"
          },
          "retentAmt": {
            "type": "number",
            "format": "double"
          },
          "pcntPlaced": {
            "type": "number",
            "format": "double"
          },
          "effectDate": {
            "type": "string"
          },
          "expireDate": {
            "type": "string"
          },
          "pcntRetent": {
            "type": "number",
            "format": "double"
          },
          "pcntRiShare": {
            "type": "number",
            "format": "double"
          },
          "pcntCovered": {
            "type": "number",
            "format": "double"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "numOfReinst": {
            "type": "integer",
            "format": "int32"
          },
          "reinstCharge": {
            "type": "number",
            "format": "double"
          },
          "maolAmount": {
            "type": "number",
            "format": "double"
          },
          "isValid": {
            "type": "boolean"
          },
          "userId1": {
            "type": "string"
          },
          "userId2": {
            "type": "string"
          },
          "lobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineOfBusiness"
            }
          }
        }
      },
      "CedantSearchResult": {
        "type": "object",
        "properties": {
          "searchTotalMatch": {
            "type": "integer",
            "format": "int64"
          },
          "searchItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Cedant"
            }
          }
        }
      },
      "PortfolioMetrics": {
        "type": "object",
        "properties": {
          "totalAccounts": {
            "type": "integer",
            "format": "int32"
          },
          "totalLocations": {
            "type": "integer",
            "format": "int32"
          },
          "totalPolicies": {
            "type": "integer",
            "format": "int32"
          },
          "perilsExposed": {
            "type": "string"
          }
        }
      },
      "EventLossItem": {
        "type": "object",
        "properties": {
          "anlsid": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "sourceid": {
            "type": "integer",
            "format": "int32"
          },
          "eventid": {
            "type": "integer",
            "format": "int32"
          },
          "perspvalue": {
            "type": "number",
            "format": "double"
          },
          "perspcode": {
            "type": "string"
          },
          "stddevi": {
            "type": "number",
            "format": "double"
          },
          "stddevc": {
            "type": "number",
            "format": "double"
          },
          "expvalue": {
            "type": "number",
            "format": "double"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "peril": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "oepWUC": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "EPMetrics": {
        "type": "object",
        "properties": {
          "Metrics": {
            "type": "string"
          },
          "ReturnPeriod": {
            "type": "number",
            "format": "double"
          },
          "Value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Bucket": {
        "type": "object"
      },
      "Currency": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "scheme": {
            "type": "string"
          },
          "vintage": {
            "type": "string"
          },
          "asOfDate": {
            "type": "string"
          }
        }
      },
      "MetricMetadata": {
        "type": "object",
        "properties": {
          "eventWeightId": {
            "type": "integer",
            "format": "int32"
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MetricValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "$ref": "#/components/schemas/Value"
          },
          "bucket": {
            "$ref": "#/components/schemas/Bucket"
          }
        }
      },
      "MetricsOutput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "workflowId": {
            "type": "integer",
            "format": "int32"
          },
          "structure": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "portfolioId": {
            "type": "integer",
            "format": "int32"
          },
          "variationId": {
            "type": "integer",
            "format": "int32"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metricName": {
            "type": "string"
          },
          "metricMetadata": {
            "$ref": "#/components/schemas/MetricMetadata"
          },
          "modelSettings": {
            "$ref": "#/components/schemas/ModelSettings"
          },
          "metricValue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricValue"
            }
          }
        }
      },
      "ModelSettings": {
        "type": "object",
        "properties": {
          "modelProfileId": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "minLossThreshold": {
            "type": "number",
            "format": "float"
          },
          "numPeriods": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Value": {
        "type": "object",
        "properties": {
          "returnPeriods": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "positionValues": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          }
        }
      },
      "StatisticsItem": {
        "type": "object",
        "properties": {
          "anlsid": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "perspcode": {
            "type": "string"
          },
          "eptype": {
            "type": "string"
          },
          "purepremium": {
            "type": "number",
            "format": "double"
          },
          "totalstddev": {
            "type": "number",
            "format": "double"
          },
          "netpurepremium": {
            "type": "number",
            "format": "double"
          },
          "activation": {
            "type": "number",
            "format": "double"
          },
          "exhaustion": {
            "type": "number",
            "format": "double"
          },
          "totlossratio": {
            "type": "number",
            "format": "double"
          },
          "limit": {
            "type": "number",
            "format": "double"
          },
          "premium": {
            "type": "number",
            "format": "double"
          },
          "netstddev": {
            "type": "number",
            "format": "double"
          },
          "exhaustallreinstatements": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "securitySchemes": {
      "RMS Bearer Authentication": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
